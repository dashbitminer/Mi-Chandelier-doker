name: Deploy to Server with Tailscale

on:
  push:
    branches:
      - main  # Se ejecuta cuando hay un push en la rama main

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3  # Descarga el código del repositorio

      - name: Download Tailscale
        run: curl -fsSL https://tailscale.com/install.sh | sh  # Instala Tailscale

      - name: Start Tailscale
        run: sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }}  # Conecta Tailscale con la clave de autenticación

      - name: Add SSH key
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          mkdir -p ~/.ssh  # Crea la carpeta SSH si no existe
          # 2
          # Solución: Convierte correctamente los saltos de línea en la clave SSH
          echo "$PRIVATE_KEY" | awk '{gsub(/\\n/,"\n")}1' > ~/.ssh/id_rsa
          # 3
          chmod 600 ~/.ssh/id_rsa  # Asegura los permisos correctos de la clave
          # 4
          eval "$(ssh-agent -s)"  # Inicia el agente SSH
          ssh-add ~/.ssh/id_rsa  # Agrega la clave privada al agente

          # Agrega la IP del servidor a la lista de hosts conocidos para evitar el prompt de confirmación
          ssh-keyscan -H "$SERVER_IP" >> ~/.ssh/known_hosts

      - name: Deploy code to server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP << 'EOF'
            cd /var/www/fastuser/data/www/awschandelier.romeo-dev.online
            git pull origin main
            sudo systemctl restart nginx
            sudo systemctl restart apache2
            php artisan config:clear
            php artisan cache:clear
            php artisan route:clear
            php artisan view:clear
            php artisan config:cache
            php artisan route:cache
            php artisan queue:restart
          EOF
