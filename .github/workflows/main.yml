name: Deploy to Server via SSH

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-22.04
  
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Tailscale
        run: curl -fsSL https://tailscale.com/install.sh | sh

      - name: Start Tailscale
        run: sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }}

      - name: Configure SSH Key and Connect
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          # Crear el directorio SSH
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # Guardar la clave asegurando que los saltos de línea sean correctos
          echo "$PRIVATE_KEY" | sed 's/\\n/\n/g' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Verificar que la clave privada es válida
          if ! ssh-keygen -y -f ~/.ssh/id_rsa &>/dev/null; then
            echo "❌ ERROR: La clave privada es inválida o está dañada"
            exit 1
          fi

          # Detener cualquier agente SSH previo
          pkill ssh-agent || true

          # Iniciar nuevo agente SSH y agregar clave
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa || { echo "❌ ERROR: No se pudo agregar la clave SSH"; exit 1; }

          # Agregar la IP del servidor a los hosts conocidos
          ssh-keyscan -H "$SERVER_IP" >> ~/.ssh/known_hosts

          # Verificar conexión SSH
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@$SERVER_IP "echo '✅ Conexión SSH exitosa'"

      - name: Deploy code to server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP << 'EOF'
            cd /var/www/fastuser/data/www/awschandelier.romeo-dev.online  
            git pull origin main
            sudo systemctl restart nginx
            sudo systemctl restart php8.1-fpm
            php artisan config:clear
            php artisan cache:clear
            php artisan route:clear
            php artisan view:clear
            php artisan migrate --force
            php artisan queue:restart
          EOF
