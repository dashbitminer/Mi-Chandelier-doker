name: Deploy to Server via SSH

on:
  push:
    branches:
      - main  # Ejecutar el deploy cuando haya un push en la rama main

jobs:
  deploy:
    runs-on: ubuntu-22.04
  
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Tailscale
        run: |
          echo "üîπ [INFO] Instalando Tailscale..."
          curl -fsSL https://tailscale.com/install.sh | sh

      - name: Start Tailscale
        run: |
          echo "üîπ [INFO] Iniciando Tailscale..."
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }}

      - name: Configure SSH Key and Connect
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          echo "üîπ [INFO] Verificando direcci√≥n del servidor..."
          if [[ -z "$SERVER_IP" ]]; then
            echo "‚ùå ERROR: SERVER_IP est√° vac√≠o"
            exit 1
          fi

          echo "üîπ [INFO] Probando conexi√≥n con el servidor..."
          ping -c 3 "$SERVER_IP" || { echo "‚ùå ERROR: No se puede alcanzar $SERVER_IP"; exit 1; }

          echo "üîπ [INFO] Verificando estado de Tailscale..."
          sudo tailscale status || { echo "‚ùå ERROR: Tailscale no est√° funcionando"; exit 1; }

          echo "üîπ [INFO] Creando directorio SSH..."
          mkdir -p ~/.ssh  

          echo "üîπ [INFO] Guardando la clave privada..."
          echo "$PRIVATE_KEY" | awk 'BEGIN{RS="\\n";ORS="\n"}{print}' > ~/.ssh/id_rsa

          echo "üîπ [INFO] Ajustando permisos de la clave..."
          chmod 600 ~/.ssh/id_rsa  

          echo "üîπ [INFO] Verificando que la clave privada es v√°lida..."
          if ! grep -q "PRIVATE KEY" ~/.ssh/id_rsa; then
            echo "‚ùå ERROR: La clave privada no tiene el formato correcto"
            exit 1
          fi

          echo "üîπ [INFO] Deteniendo cualquier agente SSH previo..."
          pkill ssh-agent || true

          echo "üîπ [INFO] Iniciando nuevo agente SSH..."
          eval "$(ssh-agent -s)"

          echo "üîπ [INFO] Agregando la clave privada al agente SSH..."
          ssh-add ~/.ssh/id_rsa || { echo "‚ùå ERROR: No se pudo agregar la clave SSH"; exit 1; }

          echo "üîπ [INFO] Agregando la IP del servidor a los hosts conocidos..."
          ssh-keyscan -H "$SERVER_IP" >> ~/.ssh/known_hosts || { echo "‚ùå ERROR: ssh-keyscan fall√≥"; exit 1; }

          echo "üîπ [INFO] Verificando conexi√≥n SSH..."
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@$SERVER_IP "echo '‚úÖ Conexi√≥n SSH exitosa'" || { echo "‚ùå ERROR: No se pudo conectar al servidor"; exit 1; }

      - name: Deploy code to server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          echo "üîπ [INFO] Conectando al servidor y desplegando c√≥digo..."
          ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP << 'EOF'
            echo "üîπ [INFO] Movi√©ndonos al directorio de la aplicaci√≥n..."
            cd /var/www/fastuser/data/www/awschandelier.romeo-dev.online || { echo "‚ùå ERROR: No se pudo acceder al directorio"; exit 1; }

            echo "üîπ [INFO] Haciendo pull del c√≥digo..."
            git pull origin main || { echo "‚ùå ERROR: git pull fall√≥"; exit 1; }

            echo "üîπ [INFO] Reiniciando servicios..."
            sudo systemctl restart nginx || { echo "‚ùå ERROR: No se pudo reiniciar Nginx"; exit 1; }
            sudo systemctl restart php8.1-fpm || { echo "‚ùå ERROR: No se pudo reiniciar PHP-FPM"; exit 1; }

            echo "üîπ [INFO] Limpiando cach√©s de Laravel..."
            php artisan config:clear
            php artisan cache:clear
            php artisan route:clear
            php artisan view:clear

            echo "üîπ [INFO] Ejecutando migraciones..."
            php artisan migrate --force || { echo "‚ùå ERROR: No se pudieron ejecutar las migraciones"; exit 1; }

            echo "üîπ [INFO] Reiniciando colas de Laravel..."
            php artisan queue:restart || { echo "‚ùå ERROR: No se pudo reiniciar las colas"; exit 1; }

            echo "‚úÖ [INFO] Despliegue completado exitosamente"
          EOF
